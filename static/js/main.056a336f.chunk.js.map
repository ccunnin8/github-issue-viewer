{"version":3,"sources":["components/Results.js","components/Issue.js","components/Search.js","App.js","index.js"],"names":["numberOfPages","num","results_per_page","Math","floor","baseurl","Results","id","useParams","useState","currentPage","setCurrentPage","loading","setLoading","error","setError","data","setData","query","URLSearchParams","useLocation","search","searchString","get","changePage","page","window","history","replaceState","useEffect","url","parseInt","a","fetch","res","status","json","console","log","length","className","to","slice","map","issue","key","Array","keys","i","onClick","Issue","state","title","user","number","login","formatDate","date","Date","toLocaleString","useHistory","response","goBack","href","alt","src","avatar_url","created_at","updated_at","body","Search","org","setOrg","repo","setRepo","style","height","onSubmit","e","preventDefault","push","handleSubmit","onChange","target","value","type","name","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.056a336f.chunk.js","sourcesContent":["/**\n * Results Page for Github Issue Tracker \n * Fetches issues from https://api.github.com/repos/org/repo/issues\n * Fetches all issues and displays 10 at a time \n */\n\nimport React, { useState, useEffect } from 'react'\nimport { useParams, Link, useLocation } from \"react-router-dom\";\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\n// https://reactrouter.com/web/example/query-parameters\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n\nfunction numberOfPages(num, results_per_page) {\n    if (num % results_per_page === 0) {\n        return num / results_per_page;\n    } else {\n        return Math.floor(num / results_per_page) + 1;\n    }\n}\n  \nconst results_per_page = 10;\nconst baseurl = \"https://api.github.com/repos\"\nconst defaultOrg = \"walmartlabs\";\nconst defaultRepo = \"thorax\";\n\nexport default function Results() {\n    const { id } = useParams();\n    const [ currentPage, setCurrentPage ] = useState(0); \n    const [ loading, setLoading ] = useState(true);\n    const [ error, setError ] = useState(\"\");\n    const [ data, setData ] = useState([]);\n    const query = useQuery();\n\n    const searchString = () => {\n        if (query.get(\"org\")) {\n            return `?org=${query.get(\"org\")}&repo=${query.get(\"repo\")}`;\n        } else {\n            return \"\";\n        }\n    }\n    const changePage = (page) => {\n        /**\n         * increment or decrement page number \n         * update url in browser so refresh brings to same page \n         */\n        window.history.replaceState(null, \"Github Issue Viewer\", `/${page}${searchString()}`);\n        setCurrentPage(page);\n    }\n\n    \n\n    useEffect(() => {\n        /**\n         * fetch data on load, update state, log errors if necessary\n         */\n        if (id) setCurrentPage(parseInt(id));\n        \n        // show walmartlabs/thorax issues if no org/repo provided otherwise \n        // attempt to get the org/repo that the user provided \n\n        let url;\n        if (query.get(\"org\") && query.get(\"repo\")) {\n            url = `${baseurl}/${query.get(\"org\")}/${query.get(\"repo\")}/issues` \n        } else {\n            url = `${baseurl}/${defaultOrg}/${defaultRepo}/issues`;\n        }\n\n        (async () => {\n            try {\n                const res = await fetch(url);\n                if (res.status === 200) {\n                    const data = await res.json();\n                    setData(data);\n                    console.log(data.length);\n                    setLoading(false);\n                    setError(\"\");   \n                } else {\n                    setLoading(false);\n                    setError(\"an error occurred getting the data\");\n                }\n            } catch (err) {\n                console.error(err);\n                setError(\"an error occcurred getting the data\");\n            }\n       })()\n    }, [id]);\n\n    return loading ? <p>Loading</p> : (\n        <div className=\"mx-auto w-11/12\">\n            <h1 className=\"text-center text-2xl\">Github Issues</h1>\n            { error && <p>{error}</p>}\n            <Link className=\"p-2 bg-green-200 border\" to=\"/\">Search again</Link>\n            <div className=\"mt-8\">\n                <header className=\"text-center uppercase font-bold w-5/6 flex flex-row\">\n                    <p className=\"w-1/5\">Number</p>\n                    <p className=\"w-1/5\">State</p>\n                    <p className=\"w-2/5\">Title</p>\n                    <p className=\"w-1/5\">Username</p>\n                </header>\n                {/** Display Issues from current index to current index + results per page */}\n                <ul className=\"list-none\">\n                    { data.slice(currentPage * results_per_page, (currentPage * results_per_page) + results_per_page).map(issue => <Issue key={`issue_${issue.id}`} {...issue} />)}\n                </ul>\n            </div>\n            <div>\n                { /** Create page links  */}\n                <ul className=\"flex flex-row\">\n                    { [...Array(numberOfPages(data.length, results_per_page)).keys()].map(i => {\n                     return <li key={\"link_to_\" + i} \n                                className=\"underline ml-2 text-blue-500\">\n                                <Link to={`/results/${i}${searchString()}`}>{i + 1}\n                                </Link>\n                            </li>\n                })}\n                </ul>\n            </div>\n            { /** Forward/Backward Buttons */}\n            <div className=\"buttons my-4\">\n                { \n                    currentPage > 0 && \n                    <button \n                        className=\"bg-blue-300 p-2 border\"\n                        onClick={() => changePage(currentPage - 1)}\n                    >\n                    Back\n                    </button> \n                }\n                { \n                    currentPage + 1< numberOfPages(data.length, results_per_page) && \n                    <button className=\"bg-blue-300 p-2 border\"\n                        onClick={() => changePage(currentPage + 1)}>\n                        Forward\n                    </button>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst Issue = ({ state, title, user, number}) => (\n    /**\n     * Display individual Issue \n     */\n    <Link to={`/issue/${number}`}>\n        <li className=\"text-center flex flex-row w-5/6 py-4 border hover:bg-gray-300\">\n            <p className=\"w-1/5\">{number}</p>\n            <p className=\"w-1/5\">{state}</p>\n            <p className=\"w-2/5\">{title}</p>\n            <p className=\"w-1/5\">{user.login}</p>\n        </li>\n    </Link>\n)\n\n\n","/**\n * Displays an individual github issue for a repo\n */\n\nimport React, { useState, useEffect } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\";\n\nfunction selectStatusFont(status) {\n    /**\n     * Params: status (string) ie, open or closed\n     * Returns tailwind font color \n     */\n    return status === \"open\" ? \"text-red-500\" : \"text-green-500\"\n}\n\nfunction formatDate(date) {\n    /**\n     * Params: date (date string)\n     * Returns formated string \n     */\n    const newDate = new Date(date);\n    return newDate.toLocaleString();\n}\n\nexport default function Issue() {\n    const { id } = useParams();\n    const [ data, setData ] = useState([]);\n    const [ loading, setLoading ] = useState(true)\n    const [ error, setError ] = useState(\"\");\n    const history = useHistory();\n     \n    useEffect(() => {\n        ( async () => {\n            const url = `https://api.github.com/repos/walmartlabs/thorax/issues/${id}`;\n            try {\n                const response = await fetch(url);\n                if (response.status === 200) {\n                    const data = await response.json();\n                    setData(data);\n                    setError(\"\"); \n                    setLoading(false);\n                } else {\n                    setLoading(true);\n                    setError(\"there was an error getting the data\")\n                }\n            } catch (err) {\n                console.error(err);\n                setError(\"there was an error getting the data\", err)\n            }\n        })();\n    }, [id])\n    return data.length === 0 ? <p>Loading</p> : (\n        <div className=\"w-11/12 mx-auto\">\n            { error && <p>{error}</p>}\n            <button onClick={() => history.goBack() }><span className=\"uppercase font-bold text-lg\">&larr; Back </span></button>\n            <h1 className=\"text-3xl my-2\">Title: {data.title}</h1>\n            <div className=\"w-100 flex flex-row\">\n                <div className=\"w-1/3\">\n                    <h2 className=\"my-2\"><a href={data} >Owner: {data.user.login}</a></h2>\n                    <img className=\"rounded\" alt=\"gravatar for this user\" src={data.user.avatar_url} />\n                </div>\n                <div className=\"w-2/3 flex flex-col justify-center items-center ml-3\">\n                    <h2 className=\"text-2xl\">Created At: {formatDate(data.created_at)}</h2>\n                    <h2 className=\"text-2xl\">Updated At: {formatDate(data.updated_at)}</h2>\n                </div>\n            </div>\n            <h3 className=\"text-2xl\">Details</h3>\n            <ul>\n                <li>State: \n                    <span \n                        className=\n                        {selectStatusFont(data.status) + \" ml-2 uppercase font-bold\"}>\n                        {data.state}\n                    </span>\n                </li>\n                <li>Body: {data.body}</li>\n            </ul>\n        </div>\n    )\n    \n}\n","/**\n * Allow user to search for issues by organization/repo name\n * Redirects to results \n */\n\nimport React, { useState } from 'react'\nimport { useHistory, Link } from \"react-router-dom\";\n\nexport default function Search () {\n    const [ org, setOrg ] = useState(\"\")\n    const [ repo, setRepo ] = useState(\"\");\n    const history = useHistory();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        history.push(`/results/0?org=${org}&repo=${repo}`);\n    }\n\n    return (\n        <div style={{height: 500}} className=\"w-full h-full flex flex-col justify-center items-center\">\n            <form onSubmit={e => handleSubmit(e)} className=\"w-3/4 mx-auto flex flex-col items-center justify-center\">\n                <label>Organization: </label>\n                <input \n                    className=\"p-1 border\"\n                    onChange={e => setOrg(e.target.value)} \n                    type=\"text\" \n                    name=\"org\" \n                    id=\"org\" \n                    value={org}\n                />\n                <label>Repo: </label>\n                <input \n                    className=\"p-1 border\"\n                    type=\"text\" \n                    name=\"repo\" \n                    id=\"repo\" \n                    value={repo}\n                    onChange={e => setRepo(e.target.value)} \n                />\n                <input type=\"submit\" \n                    className=\"bg-blue-400 p-2 border my-2 w-40\"\n                     value=\"search\" />\n            </form>\n            <a className=\"text-center bg-green-600 p-3 border w-40\" href=\"/results/0?org=walmartlabs&repo=thorax\">Thorax Repo</a>\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Results from \"./components/Results\";\nimport Issue from \"./components/Issue\";\nimport Search from \"./components/Search\"\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Search} />\n        <Route exact path =\"/results\" component={Results} />\n        <Route exact path=\"/results/:id\" component={Results} />\n        <Route exact path=\"/issue/:id\" component={Issue} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}